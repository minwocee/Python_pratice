#https://www.acmicpc.net/problem/2635
'''
문제
다음과 같은 규칙에 따라 수들을 만들려고 한다.

첫 번째 수로 양의 정수가 주어진다.
두 번째 수는 양의 정수 중에서 하나를 선택한다.
세 번째부터 이후에 나오는 모든 수는 앞의 앞의 수에서 앞의 수를 빼서 만든다. 예를 들어, 세 번째 수는 첫 번째 수에서 두 번째 수를 뺀 것이고, 네 번째 수는 두 번째 수에서 세 번째 수를 뺀 것이다.
음의 정수가 만들어지면, 이 음의 정수를 버리고 더 이상 수를 만들지 않는다.
첫 번째 수로 100이 주어질 때, 두 번째 수로 60을 선택하여 위의 규칙으로 수들을 만들면 7개의 수들 100, 60, 40, 20, 20 , 0, 20이 만들어진다. 그리고 두 번째 수로 62를 선택하여 위의 규칙으로 수들을 만들면 8개의 수들 100, 62, 38, 24, 14, 10, 4, 6이 만들어진다. 위의 예에서 알 수 있듯이, 첫 번째 수가 같더라도 두 번째 수에 따라서 만들어지는 수들의 개수가 다를 수 있다.

입력으로 첫 번째 수가 주어질 때, 이 수에서 시작하여 위의 규칙으로 만들어지는 최대 개수의 수들을 구하는 프로그램을 작성하시오. 최대 개수의 수들이 여러 개일 때, 그중 하나의 수들만 출력하면 된다.



입력
첫 번째 수가 주어진다. 이 수는 30,000 보다 같거나 작은 양의 정수이다.



출력
첫 번째 줄에는 입력된 첫 번째 수로 시작하여 위의 규칙에 따라 만들 수 있는 수들의 최대 개수를 출력한다.

둘째 줄에 그 최대 개수의 수들을 차례대로 출력한다. 이들 수 사이에는 빈칸을 하나씩 둔다.
'''

import sys

N=int(sys.stdin.readline())    # 1~30000에 해당하는 숫자를 입력 받는다.(첫번째 주어지는 숫자)

# 직접 계산해본 결과 N/2<= X <= N 의 범위 내에서 탐색을 하는것이 효율적이다

top_rank=-1
ans_list=[]
my=5000000
for i in range(int(N/2),N+1):   # i는 2번째 숫자를 의미한다.
    # DP 쓰면 될듯함
    cnt=0
    
    DP=[False]*30000
    DP[0]=N
    DP[1]=i
    
    # DP 테이블 초기화 시작함
    for k in range(2,30000):
        DP[k]=DP[k-2] - DP[k-1]
        if DP[k]>=0:
            cnt+=1
        else:
            #print(cnt, "cnt 입니다",i)
            break
    
    if cnt>top_rank:
        top_rank=cnt
        my=i
        ans_list=DP[0:cnt+2]
        
# 이제 top_rank에 최적의 수가 적혀있는걸 알수 있다.

#점화식을 사용해서 구현을 진행한다.

#print(top_rank)
print(top_rank+2)
for _ in ans_list:
    print(_,end=" ")
